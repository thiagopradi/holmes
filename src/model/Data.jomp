package model;

import java.util.Iterator;
import java.util.List;

import winterwell.jtwitter.Twitter.Status;

import jomp.runtime.OMP;

import com.restfb.Connection;
import com.restfb.DefaultFacebookClient;
import com.restfb.FacebookClient;
import com.restfb.types.Page;
import com.restfb.types.Post;

public class Data {
	private Empresa empresa;
	private int twitterGoodPoints;
	private int twitterBadPoints;
	private int facebookGoodPoints;
	private int facebookBadPoints;
	private List twitterList;
	private Page facebookPage;
	private Long numFacebookFans;
	private Connection facebookSearch;

	public Data(Empresa e1) {
		this.empresa = e1;
	}
	
	

	public Long getNumFacebookFans() {
		return numFacebookFans;
	}



	public void setNumFacebookFans(Long numFacebookFans) {
		this.numFacebookFans = numFacebookFans;
	}



	public Connection getFacebookSearch() {
		return facebookSearch;
	}



	public void setFacebookSearch(Connection facebookSearch) {
		this.facebookSearch = facebookSearch;
	}



	public List getTwitterList() {
		return twitterList;
	}


	public void setTwitterList(List twitterList) {
		this.twitterList = twitterList;
	}


	public Page getFacebookPage() {
		return facebookPage;
	}


	public void setFacebookPage(Page facebookPage) {
		this.facebookPage = facebookPage;
	}


	public Empresa getEmpresa() {
		return empresa;
	}


	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	

	public int getTwitterGoodPoints() {
		return twitterGoodPoints;
	}



	public void setTwitterGoodPoints(int twitterGoodPoints) {
		this.twitterGoodPoints = twitterGoodPoints;
	}



	public int getTwitterBadPoints() {
		return twitterBadPoints;
	}



	public void setTwitterBadPoints(int twitterBadPoints) {
		this.twitterBadPoints = twitterBadPoints;
	}
	
	



	public int getFacebookGoodPoints() {
		return facebookGoodPoints;
	}



	public void setFacebookGoodPoints(int facebookGoodPoints) {
		this.facebookGoodPoints = facebookGoodPoints;
	}



	public int getFacebookBadPoints() {
		return facebookBadPoints;
	}



	public void setFacebookBadPoints(int facebookBadPoints) {
		this.facebookBadPoints = facebookBadPoints;
	}



	public void processarTwitter() {
		int myid;
		int good = 0;
		int bad = 0;



		//omp parallel
		{	
			//omp for
			for(int i = 0; i < this.twitterList.size(); i++) {
				Status st = (Status) this.twitterList.get(i);
				System.out.println(st.getText());

				if(st.getText().contains("#fail")) {
					this.twitterBadPoints++;
				}

				if(st.getText().contains("#win")){
					this.twitterGoodPoints++;
				}
			}
		}
	}

	public void processarFacebook() {
		//omp sections
		{
			//omp section
			{
				this.numFacebookFans = this.facebookPage.getFanCount();
				
				if(this.numFacebookFans > 5000) {
					this.facebookGoodPoints++;
				} 
				if(this.numFacebookFans < 100) {
					this.facebookBadPoints++;
				}
				
				// pagina com overview vazio leva negativo
				if(this.facebookPage.getCompanyOverview() == "") {
					this.facebookBadPoints--;
				}
				
				//
				//if(this.facebookPage.getFounded())
				// calculos com base na pagina
			}
			
			//omp section
			{
				List l = this.facebookSearch.getData();
				Iterator it = l.iterator();
				while(it.hasNext()) {
					Post p = (Post) it.next();
					
					if(p.getMessage().contains("ruim") || p.getMessage().contains("pŽssimo") || p.getMessage().contains("pior")) {
						this.facebookBadPoints++;
					}

					if(p.getMessage().contains("bom") || p.getMessage().contains("—timo") || p.getMessage().contains("melhor")) {
						this.facebookGoodPoints++;
					}
				}
			}
			
		}

	}

}
